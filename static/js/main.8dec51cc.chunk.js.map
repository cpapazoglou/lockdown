{"version":3,"sources":["serviceWorkerRegistration.js","Header.js","Profile.js","Constants.js","ActionsSection.js","data/Migrations.js","AddressSelector.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","Profile","dataSet","profile","setProfile","useState","showModal","setShowModal","name","setName","addresses","setAddresses","useEffect","localStorage","setItem","JSON","stringify","addAddress","oldAddresses","push","address","selected","removeAddress","index","splice","className","Modal","show","onHide","closeButton","Title","Body","Form","Group","Control","type","placeholder","defaultValue","autoComplete","onChange","event","target","value","map","Button","variant","onClick","addressField","Footer","disabled","Container","fluid","Row","Col","filter","Actions","id","title","ActionsSection","Date","action","href","Migrations","getItem","removeItem","migrateAddressSchema","AddressSelector","Label","as","size","setSelected","App","migrations","profileData","parse","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8dec51cc.chunk.js","sourcesContent":["const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const Header = () => {\n    return null;\n}\n\nexport default Header;","import { useState, useEffect, Fragment } from 'react';\nimport { Container, Row , Col, Form, Modal, Button } from 'react-bootstrap';\n\nimport './Profile.css'\n\nconst Profile = ({ dataSet, profile, setProfile }) => {\n    const [ showModal, setShowModal ] = useState( ! dataSet );\n    const [ name, setName] = useState( profile.name );\n    const [ addresses, setAddresses] = useState( profile.addresses );\n\n    const handleClose = () => {\n        setName( profile.name );\n        setAddresses( profile.addresses );\n        setShowModal( false );\n    }\n    const handleShow = () => setShowModal( true );\n    const handleSave = () => {\n        setProfile({ name: name, addresses:addresses });\n        setShowModal( false );\n    }\n\n    // Save Profile Data to browser local storage\n    useEffect( () => {\n        localStorage.setItem('profile', JSON.stringify(profile));\n    },[ profile ])\n\n    const addAddressButton = () => {\n        return <Button variant=\"secondary\" onClick={ () => addAddress() }>Νέα Διεύθυνση</Button>\n    }\n\n    const addressField = ( address,index ) => {\n        return (\n            <Fragment key={ index } >\n                <Form.Control type=\"text\" placeholder=\"Οδός Αριθμός, Περιοχή\" defaultValue={ address.address !=='' ? address.address : '' } name=\"address\" autoComplete=\"street-address\" onChange={ (event)=> {\n                    const oldAddresses = [...addresses];\n                    oldAddresses[index].address = event.target.value\n                    setAddresses( oldAddresses );\n                }}/>\n                <Button variant=\"third\" onClick={ () => removeAddress(index) }>Αφαίρεση Διεύθυνσης</Button>\n            </Fragment>\n        )\n    }\n\n    const addAddress = () => {\n        const oldAddresses = [...addresses];\n        oldAddresses.push( { address: '', selected: false } );\n        setAddresses( oldAddresses );\n    }\n\n    const removeAddress = ( index ) => {\n        const oldAddresses = [...addresses];\n        oldAddresses.splice( index,1 );\n        setAddresses( oldAddresses );\n    }\n\n    return (\n        <section className=\"profile\">\n            <Modal show={ showModal } onHide={ handleClose }>\n                <Modal.Header closeButton={ dataSet ? true : false }>\n                    <Modal.Title>{ 'Στοιχεία' }</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Control type=\"text\" placeholder=\"Ονοματεπώνυμο\" defaultValue={ profile.name } name=\"name\" autoComplete=\"name\" onChange={(event)=>setName(event.target.value)} />\n                        </Form.Group>\n                        <Form.Group>\n                            { addresses.map( ( address, index ) => addressField( address,index ) ) }\n                        </Form.Group>\n                        <Form.Group>\n                            { addAddressButton() }\n                        </Form.Group>\n                    </Form>        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type=\"submit\" disabled={ name === '' || addresses[0]?.address === '' } variant=\"primary\" onClick={ handleSave }>Αποθήκευση</Button>\n                </Modal.Footer>\n            </Modal>\n            <Container fluid>\n                <Row>\n                    <Col>{ dataSet && \n                        <div className=\"profile__data\" onClick={ handleShow }>\n                            <div className=\"profile__data-title\"><i className=\"material-icons\">edit</i>Στοιχεία</div>\n                            <div className=\"profile__data-set\">{ profile.name } { profile.addresses.filter( address => address.selected )[0]?.address || profile.addresses[0]?.address } </div>\n                        </div> }\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n)}\n\nexport default Profile;","export const Actions = [ { id: 1, title: \"Φαρμακείο / Γιατρός\"},{ id: 2, title: \"Είδη Πρώτης Ανάγκης\"},{ id: 3, title: \"Τράπεζα / Δημόσια Υπηρεσία\"},{ id: 4, title: \"Παροχή Βοήθειας / Συνοδεία Μαθητών\"},{ id: 5, title: \"Διαζευγμένοι Γονείς / Κηδεία\"},{ id: 6, title: \"Άσκηση / Κατοικίδιο\"}];\nexport const smsNumber = '13033';\nexport const lockdownExpiryDate = new Date('12/1/2020');","import { Container, Row , Col, Button } from 'react-bootstrap';\nimport { Actions, smsNumber } from './Constants'\n\nconst ActionsSection = ({ dataSet, profile }) => {\n  const address = profile.addresses.filter( address => address.selected )[0]?.address || profile.addresses[0]?.address;\n  \n  return (\n      <section className=\"actions\">\n        <Container fluid>\n        { Actions.map((action) => {\n          return (\n          <Row key={ action.id }>\n            <Col><Button disabled={!dataSet} href={`sms:${smsNumber}?&body=${ action.id } ${ profile.name } ${ address }`}>{ action.title} </Button></Col>\n          </Row>)\n        }) }\n      </Container>\n    </section>\n\n  )\n}\n\nexport default ActionsSection;","const migrateAddressSchema = () => {\n    const address = localStorage.getItem('address');\n    const name = localStorage.getItem('name');\n    if ( address || name ) {\n        const profile = { \"name\": name, \"addresses\": [ { \"address\":address, \"selected\":true } ] };\n        localStorage.setItem('profile', JSON.stringify(profile));\n        localStorage.removeItem( 'address' );\n        localStorage.removeItem( 'name' );\n    }\n}\n\nconst Migrations = () => {\n    migrateAddressSchema();\n}\n\nexport default Migrations;","import { Container, Row , Col, Form } from 'react-bootstrap';\n\nconst AddressSelector = ( { profile, setProfile } ) => {\n    const setSelected = ( index ) => {\n        const oldAddresses = [...profile.addresses];\n        oldAddresses.map( address => address.selected = false );\n        oldAddresses[index].selected = true;\n        setProfile({ name: profile.name, addresses: oldAddresses });\n        localStorage.setItem('profile', JSON.stringify( profile ));\n    }\n\n    return (    \n        <Container fluid>\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Label>Επιλέξτε Διεύθυνση</Form.Label>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={ (event) => setSelected(event.target.value) }>\n                            { profile.addresses?.map( (address, index) => {\n                                return <option key={ index } defaultValue={ address.selected } value={ index }>{address.address}</option>;\n                            })}\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n            </Row>\n        </Container>\n)}\n\nexport default AddressSelector;","import { useState } from 'react';\nimport Header from './Header';\nimport Profile from './Profile';\n// import TimeLeft from './TimeLeft';\nimport ActionsSection from './ActionsSection';\nimport migrations from './data/Migrations'\n\nimport './App.css';\nimport AddressSelector from './AddressSelector';\n\nconst App = () => {\n  migrations();\n  const profileData = JSON.parse(localStorage.getItem('profile'));\n  const name = profileData?.name ?? '';\n  const addresses = profileData?.addresses ?? [];\n  const [ profile,setProfile ] = useState( { name , addresses } );\n  \n  const dataSet = profile.name !== '' && profile?.addresses.filter( address => address.selected )[0]?.address !== '';\n  \n  return (\n    <div className=\"App\">\n      <Header/>\n      <Profile dataSet={ dataSet } profile={ profile } setProfile={ setProfile }/>\n      {/* <TimeLeft/> */}\n      <AddressSelector profile={ profile } setProfile={ setProfile }/>\n      <ActionsSection dataSet={ dataSet } profile={ profile }/>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}